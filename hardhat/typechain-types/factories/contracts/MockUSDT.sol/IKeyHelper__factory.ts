/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IKeyHelper,
  IKeyHelperInterface,
} from "../../../contracts/MockUSDT.sol/IKeyHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "keyType",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "keyValueType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "getSingleKey",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IKeyHelper__factory {
  static readonly abi = _abi;
  static createInterface(): IKeyHelperInterface {
    return new Interface(_abi) as IKeyHelperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IKeyHelper {
    return new Contract(address, _abi, runner) as unknown as IKeyHelper;
  }
}
